plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.mod_group_id

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url = "https://www.cursemaven.com"
		allowInsecureProtocol = true
	}
	maven { url "https://maven.parchmentmc.org" } // Parchment mappings
	maven {
		name = "Greenhouse Maven"
		url = 'https://repo.greenhouse.house/releases/' //FD Refabricated
	}
	maven { url "https://mvn.devos.one/releases/" } // Porting Lib
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release" // Reach Entity Attributes (Required by Porting Lib)
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://jitpack.io/" // Fabric ASM
		content {
			excludeGroup "io.github.fabricators_of_create"
		}
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	mappings(loom.layered {
		it.officialMojangMappings {	setNameSyntheticMembers(false) }
		it.parchment("org.parchmentmc.data:parchment-${parchment_version}")
	})

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// FD Refabricated
	modImplementation("vectorwing:FarmersDelight:${fdrf_version}") {
		exclude(group: "net.fabricmc")
	}

	//for testing
	//modLocalRuntime("curse.maven:appleskin-248787:5586598")
	//modLocalRuntime("curse.maven:croptopia-415438:5571673")
	//modLocalRuntime("curse.maven:epherolib-885449:5439828")
	//modLocalRuntime("curse.maven:jei-238222:5623192")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {

	}
}